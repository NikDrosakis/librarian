version: "2.5.1"

x-common-variables: &common-variables
  MYSQL_USER: todouser
  MYSQL_PASSWORD: todopass
  MYSQL_DATABASE: tododb
  REACT_APP_SERVER_PORT: 8000

services:
  mysql-db:
    image: mysql:latest
    container_name: mysql_cont
    environment:
      <<: *common-variables
      MYSQL_HOST: localhost
      MYSQL_ROOT_PASSWORD: todopass
    ports:
      - 3306:3306
    expose:
       - 3306
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./todo.sql:/docker-entrypoint-initdb.d/todo.sql
    networks:
     - todonetwork   
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongo_cont
    volumes:      
      - ./mongoinit.js:/docker-entrypoint-initdb.d/mongoinit.js 
      - ./data/db:/data/db
    environment:
     - MONGO_INITDB_ROOT_USERNAME:todouser
     - MONGO_INITDB_ROOT_PASSWORD:todopass
     - MONGO_INITDB_DATABASE:todo
     - MONGODB_DATA_DIR:/data/db
     - MONDODB_LOG_DIR:/dev/null
    command: mongod --auth  
 #   command: mongosh --host localhost --eval  "db.getSiblingDB('todo').createUser({user:'todouser', pwd:'todopass', roles:[{role:'readWrite',db:'todo'}]});"  
    ports:
      - 27017:27017
    networks:
     - todonetwork     
  phpmyadmin:
    depends_on:
      - mysql-db
    image: phpmyadmin/phpmyadmin
    container_name: phpadmin_cont
    environment:
      PMA_HOST: mysql-db
    links:
      - mysql-db:mysql-db
    ports:
      - 8081:80
    restart: always
    networks:
     - todonetwork  
  server:
    build: ./server
    container_name: node_server_cont
    depends_on:
      - mysql-db
      - mongodb
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: mysql-db
    ports:
      - 8000:8000
    volumes:
      - ./server:/app
    links:
      - mysql-db     
    networks:
      - todonetwork  
    command: npm start
  client:
    build: ./client
    container_name: client_cont
    environment:
      <<: *common-variables
      NODE_PATH: src
    ports:
      - 8003:3000
    volumes:
      - ./client/src:/app/src
    links:
      - server
    command: npm start
    networks:
      - todonetwork  
networks:
    todonetwork:
        driver: bridge